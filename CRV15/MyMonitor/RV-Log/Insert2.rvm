package rvm;

/**
* Try the approach of meta-event (manually do the code instrumentation).
* The event with more params will be analyzed and then,
* according to the value of specific field, trigger the 
* corresponding event methods with fewer parameters.

* Another possible approach would be using AspectJ to instrument the log reader,
* so that the right event method will be invoked inside the advice. That approach
* is semi-automated and will be tried on the same property, in another (.mop) file. 
*/
Insert2(String data) {
    event insert(String user, String db, String data, long tp)
	{
		if (db != null && db.equals("db2"))
		{
			Prop_1_event_insert2DB2(data, tp);
		} 

		if (db != null && db.equals("db3"))
		{
			Prop_1_event_insert2DB3(data, tp);
		} 
	}

	event insert2DB2(String data, long tp)
	{}

	event insert2DB3(String data, long tp)
	{}

	ltl:
		insert2DB2 => <>[0,60] insert2DB3

	@fail
	{System.err.println("The data is not propagated to db3 after inserting to db2.");}
}

}
