Implementation of apache
https://commons.apache.org/proper/commons-exec/apidocs/org/apache/commons/exec/Watchdog.html
https://commons.apache.org/proper/commons-exec/apidocs/org/apache/commons/exec/TimeoutObserver.html

Design:
For each state, at most one watchdog will be created based on the least upper bound of the max waiting time of the events.

say at state s,
s [
e1 ->[2,7] s1
e2 ->[3,9] s2
timeout -> s3
] 

the timeout will occur after 9 ms in state s

If some event does not have a finite max waiting time, then no watchdog will be created.

Assume there are totally 5 states,
then at most 5 watchdogs need to be created for each monitor.


suppose monitor m change state from s to s',
then it will be removed from the watchdog for state s and 
added to watchdog for state s'


###
The above implementation incurs too much overheads.
Implement the watchdog from scratch is better.
Can use the same interface.
Can have one watchdog responsible for notifying multiple monitors
whether timeout occurs in one specific state.
In this way, the number of additional threads can be minimized, which means the 
overheads will not be too large.


