Property:
For any data which is not "unknown" and inserted into database 'db2', it should also be inserted to database 'db3' within 60 seconds since it was inserted to db2.

Monpoly's specification:

FORALL ?user. FORALL ?data . (insert(?user, db2, ?p ,?data) AND NOT(?data = "unknown") IMPLIES 
(EVENTUALLY[0,60s] EXISTS ?u2 . insert(?u2, db3, ?p, ?data) ) )


My rvm specification:

//start
package rvm;

Insert2(String data) {
static LinkedList<Insert2Monitor> monitorList = new LinkedList<>();

static void check(long time){
        int size=monitorList.size();

        while(!monitorList.isEmpty()){
        Insert2Monitor monitor = monitorList.getFirst();
        if(monitor.deadline > time)
        return;

        if(monitor.ok)
           monitorList.removeFirst();

        else{
        System.err.println("expected data '" + monitor.dat + "' is not inserted into db3 before time " + monitor.deadline);
	System.exit(1);
        }
        }
        }

private boolean ok;

private long deadline;
private String dat;

    event insert(String user, String db, String p, String data, long time)
	{
        check(time);

		if (db != null && db.equals("db2"))
		{
	    this.ok = false;
            this.deadline = time+60;
	    this.dat = data;

        monitorList.add(this);
		}

		if (db != null && db.equals("db3"))
		{
		    ok = true;	
		} 
	}


event select (String user,String b,String c,String d, long time) {        check(time);}

event update (String user,String b,String c,String d, long time) {        check(time);}

event delete (String user,String b,String c,String d, long time) {        check(time);}

event script_start (String user, long time) {        check(time);}

event script_end (String user, long time) {        check(time);}

event script_svn (String user,String b,String c,int d,int e, long time) {        check(time);}

event script_md5 (String user,String b, long time) {        check(time);}

event commit (String user,int b, long time) {        check(time);}

ltl: true
	@fail
	{System.err.println("...");}

}

//end of the rvm spec.



Trace file: 308 MB.

Event signature in the log file:

select(string,string,string,string)
insert(string,string,string,string)
update(string,string,string,string)
delete(string,string,string,string)
script_start(string)
script_end(string)
script_svn(string,string,string,int,int)
script_md5(string,string)
commit(string,int)

Evaluation:

For the insert2 property monitored by Monpoly, there is no noticeable performance difference between the situation where we universally quantify the "user" and "data" parameters 
and the situation where only "data" parameter is universally quantified. Monpoly's running time for these two specifications are 70s and 69s on my machine.

The RV-Log + RV-Monitor system can find the same violation in 20 seconds, which is 2.5 times faster.

I manually optimized the monitor library code generated by rv-monitor so that only insert events can create monitors, while all the other kinds of events only update the time.

Before I performed that optimization, the rv-log system executed more than 5 minutes and I have to force it to terminate.

I think it would be better if in the specification we can specify whether to generate monitor for an event.
