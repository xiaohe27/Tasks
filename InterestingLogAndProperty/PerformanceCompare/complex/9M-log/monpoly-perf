interval: [0, 3s] or [0, 1s]

Start time : 1444683395
Finish time : 1444683433
\nIt took Monpoly (opt) 38 seconds to output all violations of delete-1-2 Property in the 308MB log file!

@1279303651 (time-point 93149): (172)



interval [0,30s]
43 seconds

interval [0, 60s]
44 seconds

There are not many delete events in the log, which is also a reason why it is faster than the insert2 property


=============================================================

For the simplied formula and 308 MB log file:
FORALL ?user . FORALL ?data . (delete(?user, db1, ?p, ?data) AND NOT(?data = "unknown")) IMPLIES 
(EVENTUALLY[0,3s] EXISTS ?u2 . delete(?u2, db2, ?p, ?data)) 

17 seconds

=============================================================
FORALL ?user . FORALL ?data . (delete(?user, db1, ?p, ?data) AND NOT(?data = "unknown")) IMPLIES 
(EVENTUALLY[0,30h] EXISTS ?u2 . delete(?u2, db2, ?p, ?data)) OR 
( ONCE[0,60s] (EXISTS ?u2 . insert(?u2, db1, ?p, ?data)) AND
(PAST_ALWAYS[0,60s] (ALWAYS[0,60s] NOT (EXISTS ?u2 . insert(?u2, db2, ?p, ?data) ) ) ) )

47s

===============================================================
FORALL ?user . FORALL ?data . (delete(?user, db1, ?p, ?data) AND NOT(?data = "unknown")) IMPLIES 
(EVENTUALLY[0,30h] EXISTS ?u2 . delete(?u2, db2, ?p, ?data)) OR 
( ONCE[0,30h] (EXISTS ?u2 . insert(?u2, db1, ?p, ?data)) AND
(PAST_ALWAYS[0,60s] (ALWAYS[0,60s] NOT (EXISTS ?u2 . insert(?u2, db2, ?p, ?data) ) ) ) )

also 47s

================================================================
The most time consuming part is not the bounded liveness part.
or ONCE
================================================================

FORALL ?user . FORALL ?data . (delete(?user, db1, ?p, ?data) AND NOT(?data = "unknown")) IMPLIES 
(EVENTUALLY[0,30h] EXISTS ?u2 . delete(?u2, db2, ?p, ?data)) OR 
( ONCE[0,30h] (EXISTS ?u2 . insert(?u2, db1, ?p, ?data)) AND
(PAST_ALWAYS[0,30h] (ALWAYS[0,60s] NOT (EXISTS ?u2 . insert(?u2, db2, ?p, ?data) ) ) ) )

239s

=====================================================================
FORALL ?user . FORALL ?data . (delete(?user, db1, ?p, ?data) AND NOT(?data = "unknown")) IMPLIES 
(EVENTUALLY[0,30h] EXISTS ?u2 . delete(?u2, db2, ?p, ?data)) OR 
( ONCE[0,30h] (EXISTS ?u2 . insert(?u2, db1, ?p, ?data)) AND
(PAST_ALWAYS[0,30h] (ALWAYS[0,30h] NOT (EXISTS ?u2 . insert(?u2, db2, ?p, ?data) ) ) ) )

After 10494 seconds, it was killed by kernel.
./300M-Log-delete-1-2.sh: line 14: 12636 Killed                  /home/xiaohe/SW/offline-log-analysis/existingApp/monpoly-1.1.2/monpoly -sig delete.sig -formula $FORMULA -negate -log /home/xiaohe/SW/offline-log-analysis/ldcc4Monpoly

======================
The updated ldcc log

FORALL ?user . FORALL ?data . (delete(?user, db1, ?p, ?data) AND NOT(?data = "unknown")) IMPLIES 
(EVENTUALLY[0,30h] EXISTS ?u2 . delete(?u2, db2, ?p, ?data)) OR 
( ONCE[0,30h] (EXISTS ?u2 . insert(?u2, db1, ?p, ?data)) AND
(PAST_ALWAYS[0,3s] (ALWAYS[0,3s] NOT (EXISTS ?u2 . insert(?u2, db2, ?p, ?data) ) ) ) )

@1277749421 (time-point 83209): (172)

45s


====================!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!==========================================
Using csv2log to transform the csv format to Monpoly format:

Start time : 1445881631
Finish time : 1445881699
\nIt took csv2log and Monpoly (opt) 68 seconds to output all violations of delete-1-2 Property in the 308MB log file!



